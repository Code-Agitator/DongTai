
name: "ApiTest-withIAST"

on:
  schedule:
    - cron: '0 0 * * *'
    
jobs:
  # This workflow contains a single job called "build"
  Run-API-TEST:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: dongtai/dongtai-mysql-unittest:latest
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 180s
          --health-retries 10
      redis:
        image: dongtai/dongtai-redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          python-version: 3.7
          ref: main
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-prod.txt
          pip install schemathesis
      
      - name: Install dependencies
        run: |
          curl -X GET "https://iast.io/openapi/api/v1/agent/download?url=https://iast.io/openapi&language=python&projectName=WEBAPI${{ github.repository_owner }}.${{github.run_number}}" -H "Authorization: Token a303ab4bedc93f96808335d023d7ac4d2ba00773" -o dongtai-agent-python.tar.gz -k
          pip install dongtai-agent-python.tar.gz

      
      - name: Django Api Testing
        run: |
          mysql --host=127.0.0.1 -uroot -p'dongtai-iast' -D dongtai_webapi < /home/runner/work/DongTai/DongTai/test/init.sql
          cp dongtai_conf/conf/config.ini.test dongtai_conf/conf/config.ini
          export PROJECT_NAME=DONGTAI-SERVER.${{ github.repository_owner }}
          export PROJECT_VERSION=${{github.run_number}}
          export DOC=TRUE
          export PYTHONAGENT=TRUE
          mkdir -p /tmp/logstash/report/{img,word,pdf,excel} && mkdir -p /tmp/iast_cache/package 
          python3 ./deploy/docker/version_update.py || true
          python3 manage.py runserver 0.0.0.0:8000 > webapi.log &
          sleep 15
          schemathesis   run --base-url "http://localhost:8000/"  -H 'Authorization: Token 67aebd78e700ad36a82a152276196b5f49fafeb0' http://localhost:8000/api/XZPcGFKoxYXScwGjQtJx8u/schema/  --hypothesis-suppress-health-check=data_too_large,filter_too_much,too_slow,return_value,large_base_example,not_a_test_method,function_scoped_fixture --validate-schema=false  --hypothesis-verbosity normal 
